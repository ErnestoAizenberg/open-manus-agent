
from execute_task_chain import execute_task_chain
from llm.ask_gpt_chain import ask_gpt_chain
from task_registry import task_registry


class CommandExecutor:
    def __init__(self, page):  # –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É Puppeteer
        self.page = page

    async def execute(self, command):
        print(f"üîç –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∞–Ω–¥—ã: {command}")

        # 1. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–º–∞–Ω–¥—É –≤ TaskChain —á–µ—Ä–µ–∑ LLM
        task_chain = await ask_gpt_chain(command)
        print(f"üõ† TaskChain: {task_chain}")

        # 2. –í—ã–ø–æ–ª–Ω—è–µ–º —Ü–µ–ø–æ—á–∫—É –∑–∞–¥–∞—á
        results = await execute_task_chain(
            task_chain,
            task_registry,
            page=self.page,  # –ü–µ—Ä–µ–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É Puppeteer
        )

        return {
            "original_command": command,
            "task_chain": task_chain,
            "results": results,
        }
