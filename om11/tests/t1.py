import asyncio
from pyppeteer import connect
from pyppeteer.errors import NetworkError
from command_executor import CommandExecutor

async def test_manus_agent_on_browserstack():
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è BrowserStack
    BROWSERSTACK_USER = "sereernest@gmail.com"
    BROWSERSTACK_KEY = "PoF4jrAZXDDUsX2WysDC"
    BROWSERSTACK_CDP_URL = f"wss://cdp.browserstack.com/puppeteer?user={BROWSERSTACK_USER}&key={BROWSERSTACK_KEY}"

    try:
        print("üîÑ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ BrowserStack...")
        browser = await connect(
            browserWSEndpoint=BROWSERSTACK_CDP_URL,
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            ignoreHTTPSErrors=True,
            slowMo=100,  # –ó–∞–º–µ–¥–ª–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        )
        page = await browser.newPage()
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")

        executor = CommandExecutor(page)

        while True:
            user_input = input(">>> –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É (–∏–ª–∏ 'exit'): ")
            if user_input.lower() == "exit":
                break

            try:
                result = await executor.execute(user_input)
                print(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç: {result['results']}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {str(e)}")

    except NetworkError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {str(e)}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —É—á—ë—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö BrowserStack")
        print("2. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞ BrowserStack")
        print("3. –ù–∞–ª–∏—á–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ CDP –≤ –≤–∞—à–µ–º —Ç–∞—Ä–∏—Ñ–µ")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
    finally:
        if 'browser' in locals():
            await browser.close()
        print("–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    asyncio.run(test_manus_agent_on_browserstack())
